import{r as s,c as t,h as i,a as h,g as r}from"./p-3b8a929f.js";const a=class{constructor(i){s(this,i),this.onHoverBar=t(this,"hoverbar",7),this.onChange=t(this,"changebar",7),this.max=100,this.min=0,this._isValueVisible=!1,this.displayValue=!1}watchValue(s,t){this.onChange.emit({val:s,oldValue:t})}componentWillLoad(){this._isValueVisible=this.displayValue,this._infoEl=document.createElement("span"),this.el.parentElement.insertBefore(this._infoEl,this.el),this.onChange.emit({val:this.value})}async show(){this._isValueVisible=!0}async hide(){this._isValueVisible=!1}onHoverBarHandler(){this._isValueVisible?this.hide():this.show(),this.onHoverBar.emit(this._isValueVisible)}showInfo(s){this._infoEl.innerHTML=`${Math.round(s)}%`,this._infoEl.className="c-progress__info u-fade-in";const t=Math.round(this._infoEl.offsetWidth),i=this.el.children[0];let h=i?Math.round(i.offsetWidth):0,r=0;r=h>=0&&s<100?h-.5*t:h-t,this._infoEl.style.setProperty("left",`${Math.round(r)}px`)}hideInfo(){this._infoEl.className="c-progress__info u-fade-out"}async isValueVisible(){return this._isValueVisible}render(){const s=this.semirounded?"c-progress--semirounded":"",t=(this.value-this.min)/(this.max-this.min)*100;return this.el.style.setProperty("--current-value",this.value.toString()),this.el.style.setProperty("--max-value",this.max.toString()),this._isValueVisible?this.showInfo(t):this.hideInfo(),i(h,{class:`c-progress ${s}`},i("div",{onMouseOver:()=>this.onHoverBarHandler(),class:"c-progress__bar"}),i("div",{class:"c-progress__bar--remainder"}))}get el(){return r(this)}static get watchers(){return{value:["watchValue"]}}};export{a as yduqs_progress_bar}