function Module(e, t, i, o) { printVersion ? this.renderPrintVersion(e, t) : this.render(e, t, i, o) } function importMfCss() { let e = document.createElement("link"); e.setAttribute("rel", "stylesheet"), e.setAttribute("href", `${LIBS_PATH}/css/modFeedback.min.css`), document.querySelector("head").appendChild(e) } function importMfJs() { let e = document.createElement("script"); e.setAttribute("type", "text/javascript"), e.setAttribute("src", `${LIBS_PATH}/js/modFeedback.min.js`), document.querySelector("head").appendChild(e) } Module.prototype.render = function (e, t, i, o) { let n = document.createElement("section"); return n.setAttribute("id", e.getAttribute("id") || `module${t}`), n.innerHTML = e.innerHTML, n.dataset.referentialIndex = t, e.parentElement.replaceChild(n, e), this.collectMenuData(e, t, n), this.element = n, this.referentialIndex = t, "true" === e.dataset.locked ? (this.locked = !0, n.remove()) : this.buildComponents(o), this.collectScriptsData(e), this }, Module.prototype.collectMenuData = function (e, t, i) { let o = i.querySelector(".module-title"), n = i.querySelector(".module-anchor"); o = null !== o ? o.dataset.menuTitle ? o.dataset.menuTitle : "IMG" === o.tagName ? o.getAttribute("title") : o.innerHTML : e.dataset.menuTitle ? e.dataset.menuTitle : `Módulo ${t}`, null !== n ? (n.getAttribute("id") || n.setAttribute("id", `module${t}-anchor`), n = n.getAttribute("id")) : n = i.getAttribute("id"); let l = []; i.querySelectorAll(".module-topic-title").forEach((e, i) => { null !== e.getAttribute("id") && "" !== e.getAttribute("id") || e.setAttribute("id", `module${t}-topic${i}`); let n = "IMG" === e.tagName ? e.getAttribute("title") : e.innerHTML; e.dataset.menuTitle && (n = o.dataset.menuTitle), topic = { title: n, id: e.getAttribute("id") }, l.push(topic) }); let s = []; i.querySelectorAll("[data-pre-menu-item='true']").forEach(e => { null !== e.getAttribute("id") && "" !== e.getAttribute("id") || e.setAttribute("id", `module${t}-pre-topic${j}`), e.dataset.preMenuTitle ? (preItem = { title: e.dataset.preMenuTitle, id: e.getAttribute("id") }, s.push(preItem)) : (console.warn("############"), console.warn(`####### ATENÇÃO: O elemento ${e} não possui um título definido. Sem título não é possível criar uma referência no menu para o mesmo.`), console.warn("############")) }), this.title = o, this.mainAnchor = n, this.topics = l, this.preItems = s }, Module.prototype.collectScriptsData = function (e) { "undefined" != typeof scripts && (this.step = !e.dataset.stepBar || e.dataset.stepBar, (scripts.themeProgressBar || scripts.themeDefaultBar) && "false" !== this.step && (this.step = this.getThemeBarAttributes(e)), scripts.achievements && "true" === e.dataset.achievementAnimation && "true" != e.dataset.achievementByScroll && (this.achievement = this.getAchievementAttributes(e))) }, Module.prototype.renderPrintVersion = function (e, t) { let i = document.createElement("section"); i.setAttribute("id", e.getAttribute("id") || `module${t}`), i.innerHTML = e.innerHTML, e.parentElement.replaceChild(i, e), e.querySelectorAll(".hidden").forEach(e => { e.classList.remove("hidden") }), this.element = i, this.buildComponentsToPrintVersion() }, Module.prototype.buildComponentsToPrintVersion = function () { "undefined" != typeof scripts && (scripts.typewriter && new TypeWriter(this.element), scripts.questions && questionsBuilder(this.element), scripts.SVGImporter && new SVGImporter(this.element), scripts.quiz && new Quiz(this.element), scripts.charts && new ChartBuilder(this.element), scripts.activities && new ActivityBuilder(this.element), scripts.glossaryMenu && new GlossaryMenu(this.element), scripts.sensible && new Sensible(this.element), scripts.audioCard && this.buildPrintVersionAudioCard(), scripts.player && this.buildPrintVersionPodcast(), scripts.modal && this.buildPrintVersionModal(), scripts.accordion && this.buildPrintVersionAccordion(), scripts.collapse && this.buildPrintVersionCollapse()), "undefined" != typeof styles && styles.timeline && this.buildPrintVersionTimeline(), this.buildPrintVersionHeader(), this.buildPrintVersionImg(), this.buildPrintVersionVideos(), this.buildPrintVersionTooltip(), this.buildPrintVersionAlert(), this.buildPrintVersionLink(), this.buildPrintVersionComplePhrase() }, Module.prototype.buildComponents = function (e) { if ("undefined" != typeof scripts) { if (scripts.questions && (this.recoveredQuestions = questionsBuilder(this.element, e)), scripts.quiz && new Quiz(this.element), scripts.activities && new ActivityBuilder(this.element), scripts.player && this.configPodcastPlayer(), afterLoad(this.element), scripts.achievements && this.configureAnimationAchievementsScroll(), scripts.modal && this.configModals(), scripts.collapse && this.configCollapses(), scripts.accordion && this.configAccordions(), (scripts.viewportResize || void 0 === scripts.viewportResize) && this.viewportResize(), scripts.swiper && (new Swiper(".swiper-container-navigation", navigationData), new Swiper(".swiper-container-progress", progressData), new Swiper(".swiper-container-multiple", multipleData), "undefined" != typeof customSwiperData)) for (i in customSwiperData) new Swiper(i, customSwiperData[i]); scripts.typewriter && (this.typeWriter = new TypeWriter(this.element)), scripts.codeExercise && new CodeExercise(this.element), scripts.rgbExercise && new RgbExercise(this.element), scripts.SVGImporter && new SVGImporter(this.element), scripts.audioCard && new AudioCard(this.element), scripts.horizontalTimeline && new HorizontalTimeline(this.element), scripts.horizontalTimeline2 && new HorizontalTimeline2(this.element), scripts.charts && new ChartBuilder(this.element), scripts.glossaryMenu && new GlossaryMenu, scripts.sensible && new Sensible(this.element), scripts.zoomFullscreen && new zoomFullscreen(this.element), scripts.zoomImage && new zoomImage(this.element), scripts.compiler && new Compiler(this.element), configHiddenElements(this.element.getAttribute("id"), e.feedback, this.element) } this.buildButtonPrintVersion(), this.buildLazyLoadingImage(), this.tecladoAcessibilidade(), $(function () { $('[data-toggle="tooltip"]').tooltip() }), "undefined" != typeof storage && storage.configObserverProgress(this) }, Module.prototype.buildButtonPrintVersion = function () { let e = document.getElementById("btnPrint"); null !== e && e.remove(); let t = document.createElement("div"); t.classList.add("container-fluid"), t.classList.add("mt-5"), t.classList.add("col-8"), t.classList.add("col-lg-6"), t.id = "btnPrint"; let i = document.createElement("div"); i.classList.add("container"), i.classList.add("bg-dark"), i.classList.add("text-white"), i.classList.add("rounded"), i.classList.add("p-3"); let o = document.createElement("div"); o.classList.add("row"), o.classList.add("align-items-center"); let n = document.createElement("div"); n.classList.add("col-12"), n.classList.add("col-md-3"), n.classList.add("col-lg-3"); let l = document.createElement("a"); l.addEventListener("click", e => { let t = document.URL.replace(/#+([^>]*[^\/])*[^')]/, ""); window.open(t + "#imprimir"), "undefined" != typeof storage && storage.sendPrint() }), l.classList.add("btn"), l.classList.add("btn-lg"), l.classList.add("btn-primary"), l.classList.add("btn-block"), l.classList.add("py-4"); let s = document.createElement("i"); s.classList.add("fa"), s.classList.add("fa-file-alt"), s.classList.add("fa-1x"); let r = document.createElement("i"); r.classList.add("fas"), r.classList.add("fa-arrows-alt-h"), r.classList.add("fa-1x"), r.classList.add("px-2"); let a = document.createElement("i"); a.classList.add("fa"), a.classList.add("fa-file-pdf"), a.classList.add("fa-1x"); let c = document.createElement("div"); c.classList.add("col-12"), c.classList.add("col-md-9"), c.classList.add("col-lg-9"); let d = document.createElement("p"); d.classList.add("m-0"), d.classList.add("btnPrintTxt"); let u = "Ao clicar nesse botão, uma nova aba se abrirá com o material preparado para impressão. Nela, acesse o menu do seu navegador e clique em imprimir ou se preferir, utilize o atalho Ctrl + P. Nessa nova janela, na opção destino, direcione o arquivo para sua impressora ou escolha a opção: <strong>Salvar como PDF</strong>."; "undefined" != typeof printConfigs && printConfigs.textPrint && (u = printConfigs.textPrint), t.appendChild(i), i.appendChild(o), l.appendChild(s), l.appendChild(r), l.appendChild(a), n.appendChild(l), d.innerHTML = u, c.appendChild(d), o.appendChild(n), o.appendChild(c); let p = document.querySelector(".bg_footer"); p && p.insertAdjacentElement("beforeEnd", t) }, Module.prototype.unlock = function (e) { document.querySelector("main").append(this.element), this.buildComponents(e); let t = document.querySelector(`span.padlock.lock-${this.mainAnchor}`); t.parentElement.classList.remove("module-locked"), t.remove(), this.locked = !1 }, Module.prototype.configModals = function () { this.element.querySelectorAll("em-modal").forEach(e => { modalList[e.getAttribute("name")] = new Modal(e, this.element) }) }, Module.prototype.configCollapses = function () { this.element.querySelectorAll("theme-collapse").forEach(e => { modalList[e.getAttribute("name")] = new Collapse(e) }) }, Module.prototype.configAccordions = function () { this.element.querySelectorAll("theme-accordion").forEach(e => { modalList[e.getAttribute("name")] = new Accordion(e) }) }, Module.prototype.viewportResize = function () { document.querySelector("meta").nextElementSibling.setAttribute("content", "width=device-width, initial-scale=1") }, Module.prototype.configPodcastPlayer = async function () { await this.element.querySelectorAll(".podcast-player").forEach(e => { options = { showDownloadButton: !0 }, new GreenAudioPlayer(".podcast-player", options), e.classList.remove(`${".podcast-player".replace(".", "")}`) }), await this.element.querySelectorAll(".podcast-player-without-download").forEach(e => { options = { showDownloadButton: !1 }, new GreenAudioPlayer(".podcast-player-without-download", options), e.classList.remove(`${".podcast-player-without-download".replace(".", "")}`) }), "undefined" != typeof storage && this.element.querySelectorAll(".green-audio-player").forEach(e => { let t = e.querySelector(".play-pause-btn"), i = t.parentElement.querySelector("audio source").getAttribute("src"), o = void 0; void 0 !== storage.podcasts && (o = storage.podcasts.find(e => e.podcastId == i)), null != o && (e.dataset.podcastId = o.id), null != o && o.play || t.addEventListener("click", () => { void 0 !== e.dataset.playSended && !1 !== e.dataset.playSended || (e.dataset.playSended = !0, storage.sendPlayPodcast(i, e)) }), null != o && o.download || e.querySelector(".download").addEventListener("click", () => { void 0 !== e.dataset.downloadSended && !1 !== e.dataset.downloadSended || (e.dataset.downloadSended = !0, storage.sendDownloadPodcast(i, e)) }) }) }, Module.prototype.configureAnimationAchievementsScroll = function () { let e = this; e.element.querySelectorAll("[data-achievement-by-scroll=true]").forEach(t => { if (t.dataset.achievementTitle) { let o = e.getAchievementAttributes(t); var i = function (n) { t.getBoundingClientRect().top < 0 && (theme.themeDefaultBar && t.dataset.achievementActivateBar && theme.themeDefaultBar.activateAnimation(e.referentialIndex, theme.modules.filter(e => "false" !== e.step)), theme.achievements.startAnimation(o, ""), window.removeEventListener("scroll", i)) }; window.addEventListener("scroll", i) } else console.warn("############"), console.warn(`####### ATENÇÃO: O título para a conquista do elemento #${t.getAttribute("id")} não foi encontrado no arquivo index.html`), console.warn("############"), t.removeAttribute("data-achievement-by-scroll") }) }, Module.prototype.getAchievementAttributes = function (e) { let t = {}; return e.dataset.achievementTitle && (t.title = e.dataset.achievementTitle), e.dataset.achievementDescription && (t.description = e.dataset.achievementDescription), e.dataset.achievementIcon && (t.icon = e.dataset.achievementIcon), e.dataset.achievementCollection && (t.collection = e.dataset.achievementCollection), t }, Module.prototype.getThemeBarAttributes = function (e) { let t = {}; return e.dataset.stepIcon && (t.icon = e.dataset.stepIcon), e.dataset.stepCollection && (t.collection = e.dataset.stepCollection), e.dataset.stepText && (t.text = e.dataset.stepText), e.dataset.stepConclusionIcon && (t.conclusionIcon = e.dataset.stepConclusionIcon), e.dataset.stepConclusionCollection && (t.conclusionCollection = e.dataset.stepConclusionCollection), e.dataset.stepOnGoingIcon && (t.onGoingIcon = e.dataset.stepOnGoingIcon), e.dataset.stepOnGoingCollection && (t.onGoingCollection = e.dataset.stepOnGoingCollection), e.dataset.stepUseTooltipIcon && (t.useToolTipIcon = e.dataset.stepUseTooltipIcon), t }, Module.prototype.buildPrintVersionHeader = function () { let e = document.querySelector(".img_abertura").querySelector(".Logo").getAttribute("src"), t = document.querySelector("head").querySelector("title").text, i = document.createElement("img"); i.classList.add("imgPrincipal"), i.src = e; let o = document.createElement("h1"); if (o.classList.add("titlePrincipal"), o.append(t), null == document.querySelector(".imgPrincipal")) { let e = document.getElementById("Apresentacao"); e && (e.insertAdjacentElement("afterbegin", o), e.insertAdjacentElement("afterbegin", i)) } }, Module.prototype.buildPrintVersionAudioCard = function () { this.element.querySelectorAll("audio-card").forEach(e => { let t = function () { let e = document.createElement("div"), t = document.createElement("img"); return t.src = "../assets/img/audio_print_image.jpg", e.appendChild(t), e }(); e.parentElement.replaceChild(t, e) }) }, Module.prototype.buildPrintVersionPodcast = function () { let e = function () { let e = document.createElement("div"), t = document.createElement("img"); return t.src = "../assets/img/podcast_print_image.png", e.appendChild(t), e }; this.element.querySelectorAll(".podcast-player").forEach(t => { let i = t.parentNode; for (let e = 0; e < 4; e++)i = i.parentNode; let o = e(); i.parentElement.replaceChild(o, i) }), this.element.querySelectorAll(".podcast-player-without-download").forEach(t => { let i = e(); t.parentElement.replaceChild(i, t) }) }, Module.prototype.buildPrintVersionImg = function () { this.element.querySelectorAll("img").forEach(e => { let t = document.createElement("span"), i = document.createElement("img"); i.src = e.getAttribute("src"), i.title = e.getAttribute("title"), i.class = e.getAttribute("class"), i.alt = e.getAttribute("alt"); let o = document.createElement("br"), n = document.createElement("span"); n.append(e.getAttribute("title")), t.appendChild(i), t.appendChild(o), t.appendChild(n), null !== e.getAttribute("title") && e.parentElement.replaceChild(t, e) }) }, Module.prototype.buildPrintVersionVideos = function () { this.element.querySelectorAll("iframe").forEach(e => { let t = e.parentNode, i = function () { let e = document.createElement("div"), t = document.createElement("img"); return t.src = "../assets/img/video_print_image.png", e.appendChild(t), e }(); t.parentElement.replaceChild(i, t) }) }, Module.prototype.buildPrintVersionModal = function () { this.element.querySelectorAll("em-modal").forEach(e => { e.querySelectorAll(".container").forEach(e => { e.classList.add("modal_background") }) }) }, Module.prototype.buildPrintVersionTooltip = function () { this.element.querySelectorAll("[data-toggle=tooltip]").forEach(e => { let t = e.getAttribute("data-original-title") || e.getAttribute("title"), i = e.getAttribute("data-placement"), o = e.getAttribute("data-html"), n = document.createElement("span"); if (null === i && null === o) { n.classList.add("tooltip_background"); let e = "(" + t + ")"; n.append(e) } e.appendChild(n) }) }, Module.prototype.buildPrintVersionAccordion = function () { this.element.querySelectorAll("theme-accordion").forEach(e => { e.querySelectorAll("tab").forEach(t => { let i = t.getAttribute("tabClickOpen"), o = t.getAttribute("tabClickClose"); if (i && o) { let t = 0, n = i.match(/([^\/img\\]+.jpg)/gim), l = o.match(/([^\/img\\]+.jpg)/gim); n && l && e.querySelectorAll("tab").forEach(e => { e.querySelector("tab-title").classList.add("title_accordion"); let i = e.querySelector("content"); i.classList.add("content_accordion"); let o = document.createElement("img"), s = 0 == t ? n : l; o.src = "img/" + s, e.classList.add("accordion_tab"), e.insertBefore(o, i), t++ }) } }) }) }, Module.prototype.buildPrintVersionCollapse = function () { this.element.querySelectorAll("theme-collapse").forEach(e => { let t = e.getAttribute("tabClickOpen"); if (t) { let i = t.match(/img\/+([^>]*[^\/])*[^')]/); (i = i[0].toString()) && e.querySelectorAll("img").forEach(e => { e.src = i }) } }), this.element.querySelectorAll(".theme-simple-collapse").forEach(e => { e.parentElement.classList.add("collapse-simple") }) }, Module.prototype.buildPrintVersionAlert = function () { this.element.querySelectorAll(".alerta").forEach(e => { e.querySelectorAll("[onclick]").forEach(t => { let i = t.getAttribute("onclick"), o = (i.match(/\"([^\\].*)\"/gim) || i.match(/\'([^\\].*)\'/gim)).toString(), n = document.createElement("p"); n.innerHTML = o.replaceAll("'", ""), n.classList.add("itemAlert"), e.appendChild(n) }) }) }, Module.prototype.buildPrintVersionLink = function () { this.element.querySelectorAll(".itemLinks").forEach(e => { let t = e.getAttribute("onclick"), i = "(" + (t.match(/\"([^\\].*)\"/gim) || t.match(/\'([^\\].*)\'/gim).toString()) + ")", o = document.createElement("span"); o.innerHTML = i.replaceAll("'", ""), o.classList.add("itemLink"), e.parentNode.appendChild(o) }) }, Module.prototype.buildPrintVersionTimeline = function () { this.element.querySelectorAll(".timelines").forEach(e => { e.querySelectorAll(".fa-calendar-alt").forEach(e => { e.remove() }), e.querySelectorAll(".timeline2").forEach(e => { e.remove() }); let t = 0; e.querySelectorAll(".timeline1").forEach(e => { if (++t % 2 == 0) { let t = e.querySelector(".itemTimeline"), i = t.children; t.insertBefore(i[i.length - 1], i[0]) } }) }) }, Module.prototype.buildPrintVersionComplePhrase = function () { this.element.querySelectorAll("select").forEach(e => { let t = document.createElement("span"); t.classList.add("selectBlank"), e.parentElement.replaceChild(t, e) }) }, Module.prototype.buildLazyLoadingImage = function () { this.element.querySelectorAll("img").forEach(e => { e.setAttribute("loading", "lazy") }) }, Module.prototype.tecladoAcessibilidade = function () { document.addEventListener("keydown", function (e) { let t, i = 0; do { i += 1, e.altKey && e.key == i && (t = document.getElementById("modulo" + i), window.scrollTo(t.offsetLeft, t.offsetTop)), e.altKey && "c" == e.key && (t = document.getElementById("conclusao"), window.scrollTo(t.offsetLeft, t.offsetTop)), e.altKey && "a" == e.key && (t = document.getElementById("Apresentacao"), window.scrollTo(t.offsetLeft, t.offsetTop)) } while (i <= 10) }) }, importMfCss(), importMfJs();